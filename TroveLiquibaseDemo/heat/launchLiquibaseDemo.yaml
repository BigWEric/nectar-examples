heat_template_version: 2013-05-23
# This template will not work for general NeCTAR users
# You need to have been granted acces rights to Trove for this to work...


description: >
  NeCTAR Sample Template that creates a Trove database instance, then use Liquibase to
  inflate the database with table information.
  Be warned: this template will not work if you don't have access rights to Trove!


parameters:
  db_password:
    description: Password for the database user (must be > 6 characters long).
    type: string
    label: Database User Password
    hidden: true
    constraints:
      - length: { min: 6}
        description: Passwords must be at least 6 characters in length.

  db_user:
    description: The name of the database user.
    type: string
    label: Database User Name

  db_name:
    description: The name of the database that you want to create in the Trove instance.
    type: string
    label: Database Name
    constraints:
      - length: { min: 4}
        description: The database must be at least 4 characters in length.

  trove_instance_name:
    description: The name of the Trove instance that you want to create.
    type: string
    label: Trove Instance Name
    constraints:
      - length: { min: 4}
        description: The instance name must be at least 4 characters in length.

  my_key:
    description: Name of an existing KeyPair to enable SSH access to the instances
    type: string
    label: KeyPair Name

  instance_flavour:
    description: The NeCTAR flavour the webserver is to run on.
    type: string
    default: m1.small
    constraints:
      - allowed_values: [m1.small, m1.medium, m1.large, m1.xlarge, m1.xxlarge]
        description: This must be a valid NeCTAR flavour.

  image_id:
    description: ID of the image to use for the instance to be created
    type: string


resources:
  # Needs a security group running on port 8080 to access it
  # Remember creating a security group does eat into the number of groups that you are limited to (10)
  security_group:
    type: "AWS::EC2::SecurityGroup"
    properties:
      GroupDescription: "Enable ping, HTTP access via port 8080 and SSH access"
      SecurityGroupIngress:
        -
          IpProtocol: "icmp"
          FromPort: "-1"
          ToPort: "-1"
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: "8080"
          ToPort: "8080"
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"

  sample_database:
    type: OS::Trove::Instance
    # Currently trove lives in its own availability_zone, so do not use the availability_zone attribute.
    properties:
      name: { get_param: trove_instance_name}
      databases: [{ name: { get_param: db_name} }, ]
      flavor: 512MB Instance
      size: 1
      users: [{ password: { get_param: db_password }, name: { get_param: db_user }, databases: [ { get_param: db_name} ] }, ]

  liquibase_instance:
    type: OS::Nova::Server
    depends_on: sample_database
    properties:
      key_name:  { get_param: my_key }
      image:  { get_param: image_id }
      flavor:  { get_param: instance_flavour }
      availability_zone: melbourne-qh2
      security_groups: [ { get_resource: security_group } ]
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            apt-get update && sudo apt-get -y upgrade

            apt-get -y install git

            # time to sit back and smoke that cigar...
            apt-get -y install maven

            # then java 8
            apt-get -y install python-software-properties
            add-apt-repository ppa:webupd8team/java -y
            apt-get -q -y update

            # from http://askubuntu.com/questions/190582/installing-java-automatically-with-silent-option
            echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections
            echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections

            apt-get install oracle-java8-installer -y

            # set it as the default..
            apt-get install oracle-java8-set-default

            git clone https://github.com/NeCTAR-RC/nectar-examples.git

            # fix the "unable to resolve host" error messages...
            cat << EOF >> /etc/hosts
            127.0.0.1     `hostname`
            EOF

            # set up the property file with the correct passwords
            cat << EOF > /nectar-examples/TroveLiquibaseDemo/src/main/resources/do_not_version/connection.properties
            db.driver=com.mysql.jdbc.Driver
            db.url=jdbc:mysql://data_store_hostname:3306
            db.username=db_user
            db.password=db_password
            db.name=db_name
            EOF

            cd nectar-examples/TroveLiquibaseDemo
            ./start.sh
          params:
            db_name: { get_param: db_name }
            db_user: { get_param: db_user }
            db_password: { get_param: db_password }
            data_store_hostname: { get_attr: [sample_database, hostname] }

outputs:

  host_name:
    description: The host name of the data store.
    value: { get_attr: [sample_database, hostname] }

  web_app_url:
    description: The url of the web appliction.
    value:
      str_replace:
        template: http://host:8080
        params:
          host: { get_attr: [liquibase_instance, accessIPv4 ] }
